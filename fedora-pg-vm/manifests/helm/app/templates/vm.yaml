apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: {{ .Values.app.name }}
  labels:
    {{- include "vm.labels" . | nindent 4 }}
    {{- include "backstage.labels" . | nindent 4 }}
spec:
  dataVolumeTemplates:
    - metadata:
        name: demovm-volume
      spec:
        preallocation: false
        source:
          blank: {}
        storage:
          resources:
            requests:
              storage: 10Gi
  instancetype:
    name: u1.medium
  preference:
    name: fedora
  running: true
  template:
    metadata:
      labels:
        {{- include "vm.labels" . | nindent 8 }}
        {{- include "backstage.labels" . | nindent 8 }}   
    spec:
      domain:
        devices:
          disks:
            - disk:
                bus: virtio
              name: demovm-private-mongoose-disk
            - disk:
                bus: virtio
              name: cloudinitdisk
      tolerations:
        - key: metal
          operator: Exists
      volumes:
        - dataVolume:
            name: demovm-volume
          name: demovm-private-mongoose-disk
        - cloudInitConfigDrive:
            userData: |
              #cloud-config
              packages:
                - postgresql-server 
                - postgresql-contrib
              runcmd:
                - setenforce 0
                - systemctl stop firewalld
                - mkfs -t btrfs /dev/vdc
                - mkdir -p /var/lib/pgsql/
                - mount /dev/vdc /var/lib/pgsql/
                - chown -R postgres:postgres /var/lib/pgsql/
                - postgresql-setup --initdb --unit postgresql
                - systemctl start postgresql
                - systemctl enable postgresql
                - sudo -u postgres psql -c "CREATE USER inventory WITH PASSWORD 'openshift4!';"
                - sudo -u postgres psql -c "CREATE DATABASE inventory OWNER inventory;"
                - echo 'host all all 0.0.0.0/0 md5' >> /var/lib/pgsql/data/pg_hba.conf
                - echo "listen_addresses = '*'" >> /var/lib/pgsql/data/postgresql.conf
                - systemctl restart postgresql
              ssh_pwauth: true
              user: cloud-user
              password: password
              chpasswd:
                expire: false
          name: cloudinitdisk
